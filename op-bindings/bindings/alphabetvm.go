// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AlphabetVMMetaData contains all meta data concerning the AlphabetVM contract.
var AlphabetVMMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_absolutePrestate\",\"type\":\"bytes32\",\"internalType\":\"Claim\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"oracle\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPreimageOracle\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"step\",\"inputs\":[{\"name\":\"_stateData\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"_localContext\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"postState_\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"}]",
	Bin: "0x60a060405234801561001057600080fd5b5060405161354c38038061354c83398101604081905261002f91610090565b608081905260405161004090610083565b604051809103906000f08015801561005c573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216919091179055506100a9565b612f85806105c783390190565b6000602082840312156100a257600080fd5b5051919050565b6080516105046100c3600039600060af01526105046000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637dc0d1d01461003b578063e14ced3214610085575b600080fd5b60005461005b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610098610093366004610395565b6100a6565b60405190815260200161007c565b600080600060087f0000000000000000000000000000000000000000000000000000000000000000901b600889896040516100e2929190610409565b6040518091039020901b036101d9576000805473ffffffffffffffffffffffffffffffffffffffff1663e03110e161011b60048861029f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152600060248201526044016040805180830381865afa158015610175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101999190610419565b50640ffffffff0607c82901c169350905063ffffffff608082901c1660006101c38a8c018c61043d565b90506101cf8582610485565b9350505050610206565b6101e58789018961049d565b9092509050816101f4816104bf565b9250508080610202906104bf565b9150505b6040805160208101849052908101829052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101207effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01000000000000000000000000000000000000000000000000000000000000001798975050505050505050565b7f01000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831617610345818360408051600093845233602052918152606090922091527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01000000000000000000000000000000000000000000000000000000000000001790565b9392505050565b60008083601f84011261035e57600080fd5b50813567ffffffffffffffff81111561037657600080fd5b60208301915083602082850101111561038e57600080fd5b9250929050565b6000806000806000606086880312156103ad57600080fd5b853567ffffffffffffffff808211156103c557600080fd5b6103d189838a0161034c565b909750955060208801359150808211156103ea57600080fd5b506103f78882890161034c565b96999598509660400135949350505050565b8183823760009101908152919050565b6000806040838503121561042c57600080fd5b505080516020909101519092909150565b60006020828403121561044f57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561049857610498610456565b500190565b600080604083850312156104b057600080fd5b50508035926020909101359150565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104f0576104f0610456565b506001019056fea164736f6c634300080f000a60806040523480156200001157600080fd5b5060005b6200002360016010620000db565b811015620000be5760038160108110620000415762000041620000f5565b015460038260108110620000595762000059620000f5565b01546040805160208101939093528201526060016040516020818303038152906040528051906020012060038260016200009491906200010b565b60108110620000a757620000a7620000f5565b015580620000b58162000126565b91505062000015565b5062000142565b634e487b7160e01b600052601160045260246000fd5b600082821015620000f057620000f0620000c5565b500390565b634e487b7160e01b600052603260045260246000fd5b60008219821115620001215762000121620000c5565b500190565b6000600182016200013b576200013b620000c5565b5060010190565b612e3380620001526000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80639d53a648116100e3578063da35c6641161008c578063ec5efcbc11610066578063ec5efcbc146103f5578063faf37bc714610408578063fef2b4ed1461054157600080fd5b8063da35c664146103b2578063e03110e1146103ba578063e1592611146103e257600080fd5b8063b4801e61116100bd578063b4801e6114610382578063c3a079ed14610395578063d18534b51461039f57600080fd5b80639d53a648146103025780639f99ef8214610344578063b2e67ba81461035757600080fd5b806352f0f3ad116101455780637ac547671161011f5780637ac54767146102855780638542cf5014610298578063882856ef146102d657600080fd5b806352f0f3ad1461021c57806361238bde1461022f5780636551927b1461025a57600080fd5b80632055b36b116101765780632055b36b146101f75780633909af5c146101ff5780634d52b4c91461021457600080fd5b8063013cf08b146101925780630359a563146101d6575b600080fd5b6101a56101a03660046124a9565b610561565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b6101e96101e43660046124eb565b6105a6565b6040519081526020016101cd565b6101e9601081565b61021261020d3660046126e6565b6106de565b005b6101e961092c565b6101e961022a3660046127d2565b610947565b6101e961023d36600461280d565b600160209081526000928352604080842090915290825290205481565b6101e96102683660046124eb565b601560209081526000928352604080842090915290825290205481565b6101e96102933660046124a9565b610a1c565b6102c66102a636600461280d565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101cd565b6102e96102e436600461282f565b610a33565b60405167ffffffffffffffff90911681526020016101cd565b6101e96103103660046124eb565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152601760209081526040808320938352929052205490565b6102126103523660046128a4565b610a8d565b6101e96103653660046124eb565b601660209081526000928352604080842090915290825290205481565b6101e961039036600461282f565b610fcf565b6101e96201518081565b6102126103ad3660046126e6565b611001565b6013546101e9565b6103cd6103c836600461280d565b6113f2565b604080519283526020830191909152016101cd565b6102126103f0366004612935565b6114e3565b610212610403366004612981565b6115ec565b610212610416366004612a1a565b336000818152601560209081526040808320878452825280832080547fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff1660a09790971b7fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff169690961760809590951b9490941790945582518084019093529082529181019283526013805460018101825592525160029091027f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0908101805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff00000000000000000000000000000000000000009093169290921790915590517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09190910155565b6101e961054f3660046124a9565b60006020819052908152604090205481565b6013818154811061057157600080fd5b60009182526020909120600290910201805460019091015473ffffffffffffffffffffffffffffffffffffffff909116915082565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260156020908152604080832084845290915281205481906105e99060601c63ffffffff1690565b63ffffffff16905060005b60108110156106d6578160011660010361067c5773ffffffffffffffffffffffffffffffffffffffff851660009081526014602090815260408083208784529091529020816010811061064957610649612a56565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506106bd565b826003826010811061069057610690612a56565b01546040805160208101939093528201526060016040516020818303038152906040528051906020012092505b60019190911c90806106ce81612ab4565b9150506105f4565b505092915050565b60006106ea8a8a6105a6565b905061070d86868360208b01356107086107038d612aec565b611766565b6117a6565b801561072b575061072b83838360208801356107086107038a612aec565b610761576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660400135886040516020016107779190612bbb565b60405160208183030381529060405280519060200120146107c4576040517f1968a90200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360200135876020013560016107da9190612bf9565b14610811576040517f9a3b119900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108598861081f8680612c11565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061180792505050565b61086288611962565b8360400135886040516020016108789190612bbb565b60405160208183030381529060405280519060200120036108c5576040517f9843145b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505073ffffffffffffffffffffffffffffffffffffffff9590951660009081526015602090815260408083209683529590529390932080547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117905550505050565b600161093a60106002612d98565b6109449190612da4565b81565b600061095386866121fe565b9050610960836008612bf9565b82118061096d5750602083115b156109a4576040517ffe25498700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000602081815260c085901b82526008959095528251828252600286526040808320858452875280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558484528752808320948352938652838220558181529384905292205592915050565b60038160108110610a2c57600080fd5b0154905081565b60176020528260005260406000206020528160005260406000208181548110610a5b57600080fd5b906000526020600020906004918282040191900660080292509250509054906101000a900467ffffffffffffffff1681565b60608115610aa657610a9f86866122ab565b9050610ae0565b85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b3360009081526014602090815260408083208a845290915280822081516102008101928390529160109082845b815481526020019060010190808311610b0d5750503360009081526015602090815260408083208f8452909152902054939450610b4f92508391506123349050565b63ffffffff16600003610b8e576040517f87138d5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b988160c01c90565b67ffffffffffffffff1615610bd9576040517f475a253500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610beb8260a01c63ffffffff1690565b67ffffffffffffffff1690506000610c098360401c63ffffffff1690565b63ffffffff169050600882108015610c1f575080155b15610ca6576000610c368460801c63ffffffff1690565b905060008160c01b6000528b356008528351905080601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008f8152602001908152602001600020819055505050610d5b565b60088210158015610cc4575080610cbe600884612da4565b92508210155b8015610cd85750610cd58982612bf9565b82105b15610d5b576000610ce98284612da4565b905089610cf7826020612bf9565b10158015610d03575086155b15610d3a576040517ffe25498700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526016602090815260408083208f84529091529020908b013590555b6000610d6d8460601c63ffffffff1690565b63ffffffff169050855160208701608882048a1415608883061715610d9a576307b1daf16000526004601cfd5b60405160c8810160405260005b83811015610e4a578083018051835260208101516020840152604081015160408401526060810151606084015260808101516080840152508460888301526088810460051b8d013560a883015260c882206001860195508560005b610200811015610e3f576001821615610e1f5782818d0152610e3f565b8b81015160009081526020938452604090209260019290921c9101610e02565b505050608801610da7565b50505050600160106002610e5e9190612d98565b610e689190612da4565b811115610ea1576040517f6229572300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526014602090815260408083208f84529091529020610ec79086601061241f565b503360009081526017602090815260408083208f845282528220805460018101825590835291206004820401805460039092166008026101000a67ffffffffffffffff818102199093164390931602919091179055610f7b610f29838c612bf9565b60401b7fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff606084901b167fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff8716171790565b93508615610fa65777ffffffffffffffffffffffffffffffffffffffffffffffff84164260c01b1793505b50503360009081526015602090815260408083209c83529b905299909920555050505050505050565b60146020528260005260406000206020528160005260406000208160108110610ff757600080fd5b0154925083915050565b73ffffffffffffffffffffffffffffffffffffffff891660009081526015602090815260408083208b845290915290205467ffffffffffffffff811615611074576040517fc334f06900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620151806110828260c01c90565b6110969067ffffffffffffffff1642612da4565b116110cd576040517f55d4cbf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006110d98b8b6105a6565b90506110f287878360208c01356107086107038e612aec565b8015611110575061111084848360208901356107086107038b612aec565b611146576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87604001358960405160200161115c9190612bbb565b60405160208183030381529060405280519060200120146111a9576040517f1968a90200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8460200135886020013560016111bf9190612bf9565b1415806111f1575060016111d98360601c63ffffffff1690565b6111e39190612dbb565b63ffffffff16856020013514155b15611228576040517f9a3b119900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061123a8360801c63ffffffff1690565b63ffffffff169050806112538460401c63ffffffff1690565b63ffffffff1614611290576040517f7b1dafd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006112a28460a01c63ffffffff1690565b67ffffffffffffffff1690506112b9826008612bf9565b81106112f1576040517ffe25498700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112ff8b61081f8980612c11565b6113088b611962565b60006113138c612340565b9050600160026000838152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550601660008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e8152602001908152602001600020546001600083815260200190815260200160002060008481526020019081526020016000208190555082600080838152602001908152602001600020819055505050505050505050505050505050565b6000828152600260209081526040808320848452909152812054819060ff1661147b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f7072652d696d616765206d757374206578697374000000000000000000000000604482015260640160405180910390fd5b5060008381526020818152604090912054611497816008612bf9565b6114a2856020612bf9565b106114c057836114b3826008612bf9565b6114bd9190612da4565b91505b506000938452600160209081526040808620948652939052919092205492909150565b604435600080600883018611156115025763fe2549876000526004601cfd5b60c083901b6080526088838682378087017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80151908490207effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f02000000000000000000000000000000000000000000000000000000000000001760008181526002602090815260408083208b8452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915584845282528083209a83529981528982209390935590815290819052959095209190915550505050565b60006115f886866105a6565b905061161183838360208801356107086107038a612aec565b611647576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602084013515611683576040517f9a3b119900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61168b61245d565b6116998161081f8780612c11565b6116a281611962565b8460400135816040516020016116b89190612bbb565b6040516020818303038152906040528051906020012003611705576040517f9843145b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505073ffffffffffffffffffffffffffffffffffffffff9290921660009081526015602090815260408083209383529290522080547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117905550565b600081600001518260200151836040015160405160200161178993929190612de0565b604051602081830303815290604052805190602001209050919050565b60008160005b60108110156117fa578060051b880135600186831c16600181146117df57600084815260208390526040902093506117f0565b600082815260208590526040902093505b50506001016117ac565b5090931495945050505050565b608881511461181557600080fd5b6020810160208301611896565b8260031b8201518060001a8160011a60081b178160021a60101b8260031a60181b17178160041a60201b8260051a60281b178260061a60301b8360071a60381b17171790506118908161187b868560059190911b015190565b1867ffffffffffffffff16600586901b840152565b50505050565b6118a260008383611822565b6118ae60018383611822565b6118ba60028383611822565b6118c660038383611822565b6118d260048383611822565b6118de60058383611822565b6118ea60068383611822565b6118f660078383611822565b61190260088383611822565b61190e60098383611822565b61191a600a8383611822565b611926600b8383611822565b611932600c8383611822565b61193e600d8383611822565b61194a600e8383611822565b611956600f8383611822565b61189060108383611822565b6040805178010000000000008082800000000000808a8000000080008000602082015279808b00000000800000018000000080008081800000000000800991810191909152788a00000000000000880000000080008009000000008000000a60608201527b8000808b800000000000008b8000000000008089800000000000800360808201527f80000000000080028000000000000080000000000000800a800000008000000a60a08201527f800000008000808180000000000080800000000080000001800000008000800860c082015260009060e001604051602081830303815290604052905060208201602082016120de565b6102808101516101e082015161014083015160a0840151845118189118186102a082015161020083015161016084015160c0850151602086015118189118186102c083015161022084015161018085015160e0860151604087015118189118186102e08401516102408501516101a0860151610100870151606088015118189118186103008501516102608601516101c0870151610120880151608089015118189118188084603f1c611b158660011b67ffffffffffffffff1690565b18188584603f1c611b308660011b67ffffffffffffffff1690565b18188584603f1c611b4b8660011b67ffffffffffffffff1690565b181895508483603f1c611b688560011b67ffffffffffffffff1690565b181894508387603f1c611b858960011b67ffffffffffffffff1690565b60208b01518b51861867ffffffffffffffff168c5291189190911897508118600181901b603f9190911c18935060c08801518118601481901c602c9190911b1867ffffffffffffffff1660208901526101208801518718602c81901c60149190911b1867ffffffffffffffff1660c08901526102c08801518618600381901c603d9190911b1867ffffffffffffffff166101208901526101c08801518718601981901c60279190911b1867ffffffffffffffff166102c08901526102808801518218602e81901c60129190911b1867ffffffffffffffff166101c089015260408801518618600281901c603e9190911b1867ffffffffffffffff166102808901526101808801518618601581901c602b9190911b1867ffffffffffffffff1660408901526101a08801518518602781901c60199190911b1867ffffffffffffffff166101808901526102608801518718603881901c60089190911b1867ffffffffffffffff166101a08901526102e08801518518600881901c60389190911b1867ffffffffffffffff166102608901526101e08801518218601781901c60299190911b1867ffffffffffffffff166102e089015260808801518718602581901c601b9190911b1867ffffffffffffffff166101e08901526103008801518718603281901c600e9190911b1867ffffffffffffffff1660808901526102a08801518118603e81901c60029190911b1867ffffffffffffffff166103008901526101008801518518600981901c60379190911b1867ffffffffffffffff166102a08901526102008801518118601381901c602d9190911b1867ffffffffffffffff1661010089015260a08801518218601c81901c60249190911b1867ffffffffffffffff1661020089015260608801518518602481901c601c9190911b1867ffffffffffffffff1660a08901526102408801518518602b81901c60159190911b1867ffffffffffffffff1660608901526102208801518618603181901c600f9190911b1867ffffffffffffffff166102408901526101608801518118603681901c600a9190911b1867ffffffffffffffff166102208901525060e08701518518603a81901c60069190911b1867ffffffffffffffff166101608801526101408701518118603d81901c60039190911b1867ffffffffffffffff1660e0880152505067ffffffffffffffff81166101408601525050505050565b611f0581611a58565b805160208201805160408401805160608601805160808801805167ffffffffffffffff871986168a188116808c528619851689188216909952831982169095188516909552841988169091188316909152941990921618811690925260a08301805160c0808601805160e0880180516101008a0180516101208c018051861985168a188d16909a528319821686188c16909652801989169092188a169092528619861618881690529219909216909218841690526101408401805161016086018051610180880180516101a08a0180516101c08c0180518619851689188d169099528319821686188c16909652801988169092188a169092528519851618881690529119909116909118841690526101e08401805161020086018051610220880180516102408a0180516102608c0180518619851689188d169099528319821686188c16909652801988169092188a16909252851985161888169052911990911690911884169052610280840180516102a0860180516102c0880180516102e08a0180516103008c0180518619851689188d169099528319821686188c16909652801988169092188a16909252851985161888169052911990911690911884169052600386901b850151901c9081189091168252611890565b6120ea60008284611efc565b6120f660018284611efc565b61210260028284611efc565b61210e60038284611efc565b61211a60048284611efc565b61212660058284611efc565b61213260068284611efc565b61213e60078284611efc565b61214a60088284611efc565b61215660098284611efc565b612162600a8284611efc565b61216e600b8284611efc565b61217a600c8284611efc565b612186600d8284611efc565b612192600e8284611efc565b61219e600f8284611efc565b6121aa60108284611efc565b6121b660118284611efc565b6121c260128284611efc565b6121ce60138284611efc565b6121da60148284611efc565b6121e660158284611efc565b6121f260168284611efc565b61189060178284611efc565b7f01000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316176122a4818360408051600093845233602052918152606090922091527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01000000000000000000000000000000000000000000000000000000000000001790565b9392505050565b6060604051905081602082018181018286833760888306808015612309576088829003850160808582017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01536001845160001a178453865261231b565b60018353608060878401536088850186525b5050505050601f19603f82510116810160405292915050565b60801c63ffffffff1690565b60006123c3565b66ff00ff00ff00ff8160081c1667ff00ff00ff00ff006123718360081b67ffffffffffffffff1690565b1617905065ffff0000ffff8160101c1667ffff0000ffff000061239e8360101b67ffffffffffffffff1690565b1617905060008160201c6123bc8360201b67ffffffffffffffff1690565b1792915050565b608082015160208301906123db90612347565b612347565b60408201516123e990612347565b60401b176124016123d660018460059190911b015190565b825160809190911b9061241390612347565b60c01b17179392505050565b826010810192821561244d579160200282015b8281111561244d578251825591602001919060010190612432565b50612459929150612475565b5090565b604051806020016040528061247061248a565b905290565b5b808211156124595760008155600101612476565b6040518061032001604052806019906020820280368337509192915050565b6000602082840312156124bb57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146124e657600080fd5b919050565b600080604083850312156124fe57600080fd5b612507836124c2565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610320810167ffffffffffffffff8111828210171561256857612568612515565b60405290565b6040516060810167ffffffffffffffff8111828210171561256857612568612515565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156125d8576125d8612515565b604052919050565b60006103208083850312156125f457600080fd5b604051602080820167ffffffffffffffff838210818311171561261957612619612515565b8160405283955087601f88011261262f57600080fd5b612637612544565b948701949150818886111561264b57600080fd5b875b8681101561267357803583811681146126665760008081fd5b845292840192840161264d565b50909352509295945050505050565b60006060828403121561269457600080fd5b50919050565b60008083601f8401126126ac57600080fd5b50813567ffffffffffffffff8111156126c457600080fd5b6020830191508360208260051b85010111156126df57600080fd5b9250929050565b60008060008060008060008060006103e08a8c03121561270557600080fd5b61270e8a6124c2565b985060208a013597506127248b60408c016125e0565b96506103608a013567ffffffffffffffff8082111561274257600080fd5b61274e8d838e01612682565b97506103808c013591508082111561276557600080fd5b6127718d838e0161269a565b90975095506103a08c013591508082111561278b57600080fd5b6127978d838e01612682565b94506103c08c01359150808211156127ae57600080fd5b506127bb8c828d0161269a565b915080935050809150509295985092959850929598565b600080600080600060a086880312156127ea57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561282057600080fd5b50508035926020909101359150565b60008060006060848603121561284457600080fd5b61284d846124c2565b95602085013595506040909401359392505050565b60008083601f84011261287457600080fd5b50813567ffffffffffffffff81111561288c57600080fd5b6020830191508360208285010111156126df57600080fd5b600080600080600080608087890312156128bd57600080fd5b86359550602087013567ffffffffffffffff808211156128dc57600080fd5b6128e88a838b01612862565b9097509550604089013591508082111561290157600080fd5b5061290e89828a0161269a565b9094509250506060870135801515811461292757600080fd5b809150509295509295509295565b60008060006040848603121561294a57600080fd5b83359250602084013567ffffffffffffffff81111561296857600080fd5b61297486828701612862565b9497909650939450505050565b60008060008060006080868803121561299957600080fd5b6129a2866124c2565b945060208601359350604086013567ffffffffffffffff808211156129c657600080fd5b6129d289838a01612682565b945060608801359150808211156129e857600080fd5b506129f58882890161269a565b969995985093965092949392505050565b803563ffffffff811681146124e657600080fd5b600080600060608486031215612a2f57600080fd5b83359250612a3f60208501612a06565b9150612a4d60408501612a06565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ae557612ae5612a85565b5060010190565b600060608236031215612afe57600080fd5b612b0661256e565b823567ffffffffffffffff80821115612b1e57600080fd5b9084019036601f830112612b3157600080fd5b8135602082821115612b4557612b45612515565b612b75817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601612591565b92508183523681838601011115612b8b57600080fd5b81818501828501376000918301810191909152908352848101359083015250604092830135928101929092525090565b81516103208201908260005b6019811015612bf057825167ffffffffffffffff16825260209283019290910190600101612bc7565b50505092915050565b60008219821115612c0c57612c0c612a85565b500190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c4657600080fd5b83018035915067ffffffffffffffff821115612c6157600080fd5b6020019150368190038213156126df57600080fd5b600181815b80851115612ccf57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115612cb557612cb5612a85565b80851615612cc257918102915b93841c9390800290612c7b565b509250929050565b600082612ce657506001612d92565b81612cf357506000612d92565b8160018114612d095760028114612d1357612d2f565b6001915050612d92565b60ff841115612d2457612d24612a85565b50506001821b612d92565b5060208310610133831016604e8410600b8410161715612d52575081810a612d92565b612d5c8383612c76565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115612d8e57612d8e612a85565b0290505b92915050565b60006122a48383612cd7565b600082821015612db657612db6612a85565b500390565b600063ffffffff83811690831681811015612dd857612dd8612a85565b039392505050565b6000845160005b81811015612e015760208188018101518583015201612de7565b81811115612e10576000828501525b509190910192835250602082015260400191905056fea164736f6c634300080f000a",
}

// AlphabetVMABI is the input ABI used to generate the binding from.
// Deprecated: Use AlphabetVMMetaData.ABI instead.
var AlphabetVMABI = AlphabetVMMetaData.ABI

// AlphabetVMBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AlphabetVMMetaData.Bin instead.
var AlphabetVMBin = AlphabetVMMetaData.Bin

// DeployAlphabetVM deploys a new Ethereum contract, binding an instance of AlphabetVM to it.
func DeployAlphabetVM(auth *bind.TransactOpts, backend bind.ContractBackend, _absolutePrestate [32]byte) (common.Address, *types.Transaction, *AlphabetVM, error) {
	parsed, err := AlphabetVMMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AlphabetVMBin), backend, _absolutePrestate)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AlphabetVM{AlphabetVMCaller: AlphabetVMCaller{contract: contract}, AlphabetVMTransactor: AlphabetVMTransactor{contract: contract}, AlphabetVMFilterer: AlphabetVMFilterer{contract: contract}}, nil
}

// AlphabetVM is an auto generated Go binding around an Ethereum contract.
type AlphabetVM struct {
	AlphabetVMCaller     // Read-only binding to the contract
	AlphabetVMTransactor // Write-only binding to the contract
	AlphabetVMFilterer   // Log filterer for contract events
}

// AlphabetVMCaller is an auto generated read-only Go binding around an Ethereum contract.
type AlphabetVMCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AlphabetVMTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AlphabetVMTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AlphabetVMFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AlphabetVMFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AlphabetVMSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AlphabetVMSession struct {
	Contract     *AlphabetVM       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AlphabetVMCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AlphabetVMCallerSession struct {
	Contract *AlphabetVMCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// AlphabetVMTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AlphabetVMTransactorSession struct {
	Contract     *AlphabetVMTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// AlphabetVMRaw is an auto generated low-level Go binding around an Ethereum contract.
type AlphabetVMRaw struct {
	Contract *AlphabetVM // Generic contract binding to access the raw methods on
}

// AlphabetVMCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AlphabetVMCallerRaw struct {
	Contract *AlphabetVMCaller // Generic read-only contract binding to access the raw methods on
}

// AlphabetVMTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AlphabetVMTransactorRaw struct {
	Contract *AlphabetVMTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAlphabetVM creates a new instance of AlphabetVM, bound to a specific deployed contract.
func NewAlphabetVM(address common.Address, backend bind.ContractBackend) (*AlphabetVM, error) {
	contract, err := bindAlphabetVM(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AlphabetVM{AlphabetVMCaller: AlphabetVMCaller{contract: contract}, AlphabetVMTransactor: AlphabetVMTransactor{contract: contract}, AlphabetVMFilterer: AlphabetVMFilterer{contract: contract}}, nil
}

// NewAlphabetVMCaller creates a new read-only instance of AlphabetVM, bound to a specific deployed contract.
func NewAlphabetVMCaller(address common.Address, caller bind.ContractCaller) (*AlphabetVMCaller, error) {
	contract, err := bindAlphabetVM(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AlphabetVMCaller{contract: contract}, nil
}

// NewAlphabetVMTransactor creates a new write-only instance of AlphabetVM, bound to a specific deployed contract.
func NewAlphabetVMTransactor(address common.Address, transactor bind.ContractTransactor) (*AlphabetVMTransactor, error) {
	contract, err := bindAlphabetVM(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AlphabetVMTransactor{contract: contract}, nil
}

// NewAlphabetVMFilterer creates a new log filterer instance of AlphabetVM, bound to a specific deployed contract.
func NewAlphabetVMFilterer(address common.Address, filterer bind.ContractFilterer) (*AlphabetVMFilterer, error) {
	contract, err := bindAlphabetVM(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AlphabetVMFilterer{contract: contract}, nil
}

// bindAlphabetVM binds a generic wrapper to an already deployed contract.
func bindAlphabetVM(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AlphabetVMABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AlphabetVM *AlphabetVMRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AlphabetVM.Contract.AlphabetVMCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AlphabetVM *AlphabetVMRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AlphabetVM.Contract.AlphabetVMTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AlphabetVM *AlphabetVMRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AlphabetVM.Contract.AlphabetVMTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AlphabetVM *AlphabetVMCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AlphabetVM.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AlphabetVM *AlphabetVMTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AlphabetVM.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AlphabetVM *AlphabetVMTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AlphabetVM.Contract.contract.Transact(opts, method, params...)
}

// Oracle is a free data retrieval call binding the contract method 0x7dc0d1d0.
//
// Solidity: function oracle() view returns(address)
func (_AlphabetVM *AlphabetVMCaller) Oracle(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AlphabetVM.contract.Call(opts, &out, "oracle")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Oracle is a free data retrieval call binding the contract method 0x7dc0d1d0.
//
// Solidity: function oracle() view returns(address)
func (_AlphabetVM *AlphabetVMSession) Oracle() (common.Address, error) {
	return _AlphabetVM.Contract.Oracle(&_AlphabetVM.CallOpts)
}

// Oracle is a free data retrieval call binding the contract method 0x7dc0d1d0.
//
// Solidity: function oracle() view returns(address)
func (_AlphabetVM *AlphabetVMCallerSession) Oracle() (common.Address, error) {
	return _AlphabetVM.Contract.Oracle(&_AlphabetVM.CallOpts)
}

// Step is a free data retrieval call binding the contract method 0xe14ced32.
//
// Solidity: function step(bytes _stateData, bytes , bytes32 _localContext) view returns(bytes32 postState_)
func (_AlphabetVM *AlphabetVMCaller) Step(opts *bind.CallOpts, _stateData []byte, arg1 []byte, _localContext [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _AlphabetVM.contract.Call(opts, &out, "step", _stateData, arg1, _localContext)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// Step is a free data retrieval call binding the contract method 0xe14ced32.
//
// Solidity: function step(bytes _stateData, bytes , bytes32 _localContext) view returns(bytes32 postState_)
func (_AlphabetVM *AlphabetVMSession) Step(_stateData []byte, arg1 []byte, _localContext [32]byte) ([32]byte, error) {
	return _AlphabetVM.Contract.Step(&_AlphabetVM.CallOpts, _stateData, arg1, _localContext)
}

// Step is a free data retrieval call binding the contract method 0xe14ced32.
//
// Solidity: function step(bytes _stateData, bytes , bytes32 _localContext) view returns(bytes32 postState_)
func (_AlphabetVM *AlphabetVMCallerSession) Step(_stateData []byte, arg1 []byte, _localContext [32]byte) ([32]byte, error) {
	return _AlphabetVM.Contract.Step(&_AlphabetVM.CallOpts, _stateData, arg1, _localContext)
}
