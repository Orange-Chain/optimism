global:
  enabled: true
  tlsDisable: false
  certSecretName: omgnetwork-certs-d4h792hbhg
injector:
  enabled: false
server:
  dataStorage:
    enabled: true
    size: 200Gi
    storageClassName: vault-data
    accessMode: ReadWriteOnce
  auditStorage:
    enabled: true
    size: 100Gi
    storageClass: vault-audit
    accessMode: ReadWriteOnce
  service:
    enabled: true
    port: 8200
    type: LoadBalancer
    annotations:
      cloud.google.com/load-balancer-type: Internal
  ha:
    enabled: true
    replicas: 5
    raft:
      enabled: true
      setNodeId: true
      config: |-
        ui = false
        log_level = "info"
        cluster_name = "omgnetwork-cluster-1113"

        listener "tcp" {
            tls_disable = {{ .Values.global.tlsDisable }}
            tls_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            tls_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"

            address = "[::]:8200"
            cluster_address = "[::]:8201"
        }

        seal "gcpckms" {
            region      = "us-west1"
            project     = "omgnetwork-vault-1113"
            key_ring    = "omgnetwork-vault-keyring"
            crypto_key  = "omgnetwork-vault-unseal-key"
        }

        storage "raft" {
            path = "/vault/data"

            retry_join {
            leader_api_addr = "https://vault-0.vault-internal.default.svc.cluster.local:8200"
            leader_client_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            leader_client_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"
            leader_ca_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/ca.crt"
            }

            retry_join {
            leader_api_addr = "https://vault-1.vault-internal.default.svc.cluster.local:8200"
            leader_client_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            leader_client_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"
            leader_ca_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/ca.crt"
            }

            retry_join {
            leader_api_addr = "https://vault-2.vault-internal.default.svc.cluster.local:8200"
            leader_client_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            leader_client_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"
            leader_ca_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/ca.crt"
            }

            retry_join {
            leader_api_addr = "https://vault-3.vault-internal.default.svc.cluster.local:8200"
            leader_client_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            leader_client_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"
            leader_ca_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/ca.crt"
            }

            retry_join {
            leader_api_addr = "https://vault-4.vault-internal.default.svc.cluster.local:8200"
            leader_client_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.crt"
            leader_client_key_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/vault.key"
            leader_ca_cert_file = "/vault/userconfig/{{ .Values.global.certSecretName }}/ca.crt"
            }
        }
      service_registration: 
        namespace: "vault"
        pod_name: "vault"
  image:
    repository: vault # TODO: will change to the omgnetwork/vault image
    tag: 1.5.5
    pullPolicy: IfNotPresent
    updateStrategyType: RollingUpdate
  ingress:
    enabled: false
  extraEnvironmentVars:
    GOOGLE_REGION: us-west1
    GOOGLE_PROJECT: omgnetwork-vault-1113
    GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/kms-creds/kms_account.key.json
  extraVolumes:
    - name: kms-creds
      type: secret
    - name: omgnetwork-certs-d4h792hbhg
      type: secret
  affinity: null
  dev:
    enabled: false
  standalone:
    enabled: false
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 250m
ui:
  enabled: false
  publishNotReadyAddresses: true
  serviceType: "LoadBalancer"
  externalPort: 8200
  loadBalancerSourceRanges:
    - 10.1.0.0/16
