apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-server
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ template "omisego-vault.chart" . }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: server
  template:
    metadata:
      labels:
        helm.sh/chart: {{ template "omisego-vault.chart" . }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: server  
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ .Chart.Name }}
      containers:
      - name: vault
        image: {{ .Values.server.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: VAULT_API_ADDR
            value: "https://$(POD_IP):8200"
          - name: VAULT_CLUSTER_ADDR
            value: "https://$(POD_IP):8201"
        command:
          - "/bin/sh"
          - "-ec"
          - |
            vault server -config=/vault/config/server.hcl
        volumeMounts:
          - name: vault-config
            mountPath: /vault/config/server.hcl
            subPath: server.hcl
          - name: ca-certs
            mountPath: /etc/tls/ca
            readOnly: true
          - name: service-certs
            mountPath: /etc/tls/service
            readOnly: true
      - name: consul-sidecar
        image: {{ .Values.consul.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command: 
          - "/bin/sh"
          - "-ec"
          - |
            exec /bin/consul agent \
              -retry-join='provider=k8s namespace="{{ .Release.Namespace }}" label_selector="app=omisego-consul,component=server"' \
              -hcl='acl { tokens = { default = "{{ .Values.consul.acl.token }}" } }' \
              -encrypt="{{ .Values.consul.gossipKey }}" \
              -config-file=/consul/config/sidecar.json \
              -domain={{ .Values.consul.domain }} \
              -datacenter={{ .Values.consul.datacenter }} \
              -data-dir=/consul/data \
              -disable-host-node-id
        volumeMounts:
          - name: vault-config
            mountPath: /consul/config/sidecar.json
            subPath: sidecar.json
          - name: ca-certs
            mountPath: /etc/tls/ca
            readOnly: true
          - name: service-certs
            mountPath: /etc/tls/service
            readOnly: true
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/sh
                - -c
                - consul leave
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - |
                curl http://127.0.0.1:8500/v1/status/leader 2>/dev/null | grep -E '".+"'
          failureThreshold: 2
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
      volumes:
        - name: vault-config
          configMap:
            name: {{ .Chart.Name }}-server-config
        - name: ca-certs
          secret:
            secretName: {{ .Values.global.certificatesSecretNamePrefix }}-ca
        - name: service-certs
          secret:
            secretName: {{ .Values.global.certificatesSecretNamePrefix }}-services
