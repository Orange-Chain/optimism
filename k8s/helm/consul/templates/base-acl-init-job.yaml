apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-acl-init
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ template "omisego-consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  # annotations:
  #   "helm.sh/hook": post-install
  #   "helm.sh/hook-weight": "1"
  #   "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Chart.Name }}-acl-init
      labels:
        app: {{ .Chart.Name }}
        chart: {{ template "omisego-consul.chart" . }}
        release: {{ .Release.Name }}
        component: acl-init
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Chart.Name }}
      {{- if .Values.global.tlsEnabled }}
      volumes:
      - name: tls-ca-cert
        secret:
          secretName: {{ .Values.global.certificatesSecretName }}
      {{- end }}
      containers:
        - name: post-install-job
          image: {{ .Values.global.imageK8S }}
          {{- if .Values.global.tlsEnabled }}
          volumeMounts:
            - name: tls-ca-cert
              mountPath: /etc/tls
              readOnly: true
          env:
            - name: CONSUL_CACERT
              value: /etc/tls/ca.pem
            - name: CONSUL_CLIENT_CERT
              value: /etc/tls/services.pem
            - name: CONSUL_CLIENT_KEY
              value: /etc/tls/services-key.pem
          {{- end }}
          command:
            - "/bin/sh"
            - "-ec"
            - |
              consul-k8s server-acl-init \
                -server-label-selector=component=server,app={{ .Chart.Name }},release={{ .Release.Name }} \
                -resource-prefix={{ .Chart.Name }} \
                -k8s-namespace={{ .Release.Namespace }} \
                {{- if .Values.global.tlsEnabled }}
                -use-https \
                -consul-ca-cert=/etc/tls/ca.pem \
                -consul-tls-server-name=server.{{ .Values.global.datacenter }}.{{ .Values.global.domain }} \
                {{- end }}
                -expected-replicas={{ .Values.server.replicas }}
