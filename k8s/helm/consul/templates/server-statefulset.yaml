apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ template "omisego-consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: server
spec:
  serviceName: {{ .Chart.Name }}-server
  podManagementPolicy: Parallel
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      chart: {{ template "omisego-consul.chart" . }}
      release: {{ .Release.Name }}
      component: server
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        chart: {{ template "omisego-consul.chart" . }}
        release: {{ .Release.Name }}
        component: server
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: consul
          image: {{ .Values.global.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONSUL_HTTP_ADDR
              value: https://localhost:8501
            - name: CONSUL_CACERT
              value: /etc/tls/ca/tls.crt
            - name: CONSUL_CLIENT_CERT
              value: /etc/tls/service/tls.crt
            - name: CONSUL_CLIENT_KEY
              value: /etc/tls/service/tls.key
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="{{ .Chart.Name }}-server"
              exec /bin/consul agent \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect={{ .Values.server.bootstrapExpect }} \
                {{- range $index := until (.Values.server.replicas | int) }}
                -retry-join=${CONSUL_FULLNAME}-{{ $index }}.${CONSUL_FULLNAME}.${NAMESPACE}.svc \
                {{- end }}
                -client=0.0.0.0 \
                -config-file=/consul/userconfig/config.json \
                -datacenter={{ .Values.global.datacenter }} \
                -data-dir=/consul/data \
                -domain={{ .Values.global.domain }} \
                -encrypt="{{ .Values.global.gossipKey }}" \
                -server \
                -ui \
                -disable-host-node-id
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - consul leave
          ports:
            - containerPort: 8501
              name: https
            - containerPort: 8301
              name: serflan
            - containerPort: 8302
              name: serfwan
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl \
                    --cacert /etc/tls/ca/tls.crt \
                    https://127.0.0.1:8501/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /consul/userconfig
            - name: ca-certs
              mountPath: /etc/tls/ca
              readOnly: true
            - name: service-certs
              mountPath: /etc/tls/service
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ .Chart.Name }}-server-config
        - name: ca-certs
          secret:
            secretName: {{ .Values.global.certificatesSecretNamePrefix }}-ca
        - name: service-certs
          secret:
            secretName: {{ .Values.global.certificatesSecretNamePrefix }}-services
