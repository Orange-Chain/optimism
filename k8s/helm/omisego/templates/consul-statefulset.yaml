apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-consul-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ template "omisego.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: consul-server
spec:
  serviceName: {{ .Chart.Name }}-consul-server
  podManagementPolicy: Parallel
  replicas: {{ .Values.consul.server.replicas }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      chart: {{ template "omisego.chart" . }}
      release: {{ .Release.Name }}
      component: consul-server
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        chart: {{ template "omisego.chart" . }}
        release: {{ .Release.Name }}
        component: consul-server
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ .Chart.Name }}-consul
      securityContext:
        fsGroup: 1000
      containers:
        - name: consul
          image: {{ .Values.consul.image }}
          imagePullPolicy: {{ .Values.consul.pullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GOSSIP_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.consul.gossipEncryption.secretName }}
                  value: {{ .Values.consul.gossipEncryption.secretKey }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.global.tlsEnabled }}
            - name: CONSUL_HTTP_ADDR
              value: https://localhost:8501
            - name: CONSUL_CACERT
              value: /consul/tls/ca.crt
            {{- end }}
          command: |
            consul agent \
              -advertise=$POD_IP \
              -bind=0.0.0.0 \
              -bootstrap-expect={{ .Values.consul.server.bootstrapExpect }} \
              -retry-join=consul-0.consul.$NAMESPACE.svc.cluster.local \
              -retry-join=consul-1.consul.$NAMESPACE.svc.cluster.local \
              -retry-join=consul-2.consul.$NAMESPACE.svc.cluster.local \
              -client=0.0.0.0 \
              -config-dir=/consul/config \
              -datacenter={{ .Values.consul.datacenter }} \
              -data-dir=/consul/data \
              -domain={{ .Values.consul.domain }} \
              -encrypt="${GOSSIP_KEY}" \
              -server \
              -ui \
              -disable-host-node-id
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - consul leave
          ports:
            {{- if not .Values.global.tlsEnabled }}
            - containerPort: 8500
              name: http
            {{- end }}
            {{- if .Values.global.tlsEnabled }}
            - containerPort: 8501
              name: https
            {{- end }}
            - containerPort: 8301
              name: serflan
            - containerPort: 8302
              name: serfwan
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  {{- if .Values.global.tlsEnabled }}
                  curl \
                    --cacert /consul/tls/ca.crt \
                    https://127.0.0.1:8501/v1/status/leader \
                  {{- else }}
                  curl http://127.0.0.1:8500/v1/status/leader \
                  {{- end }}
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            # FIXME:
            # - name: data-{{ .Release.Namespace }}
            #   mountPath: /consul/data
            - name: config
              mountPath: /consul/config
            {{- if .Values.global.tlsEnabled }}
            - name: tls-certs
              mountPath: /consul/tls
              readOnly: true
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Chart.Name }}-consul-server-config
        {{- if .Values.global.tlsEnabled }}
        - name: tls-certs
          secret:
            secretName: {{ .Chart.Name }}-certs
        {{- end }}
