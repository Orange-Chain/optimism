name: Build & Tag Container, Push to ECR, Deploy to Dev

on:
  push:
    branches:
      #- master
      - dockerization

jobs:
  build:
    name: Build, Tag & push to ECR, Deploy task
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CI_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CI_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Stop existing dev-rollup-full-node ECS task
        run: |
          echo $(aws ecs list-tasks --cluster dev-rollup-full-node --service-name rollup-full-node) \
          | awk -F\[ '{print $2}' \
          | awk -F\" '{print $2}'

#      - uses: actions/checkout@v2
#      - name: Setup node
#        uses: actions/setup-node@v1
#
#      - name: Install Dependencies
#        run: yarn install
#
#      - name: Build
#        run: |
#          yarn clean
#          yarn build
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_CI_USER_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_CI_USER_SECRET_ACCESS_KEY }}
#          aws-region: us-east-2
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: optimism/rollup-full-node
#          IMAGE_TAG: latest
#        run: |
#          cd packages/rollup-full-node
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#      - name: Stop existing dev-rollup-full-node ECS task
#        run: |
#          echo $(aws ecs list-tasks --cluster dev-rollup-full-node --service-name rollup-full-node | grep -m1 arn:) \
#          | read task_arn; \
#          if [ ! -z "${task_arn}" ]; \
#          then aws ecs stop-task --cluster dev-rollup-full-node --task ${task_arn//\"}; \
#          fi \
#          | > /dev/null
#
#      - name: Logout of Amazon ECR
#        if: always()
#        run: docker logout ${{ steps.login-ecr.outputs.registry }}
